-- DROP TABLES (MSSQL does not support IF EXISTS for DROP DOMAIN)
IF OBJECT_ID('AI_MAP_USER_ABILITY_USER_ROLE', 'U') IS NOT NULL DROP TABLE AI_MAP_USER_ABILITY_USER_ROLE;
IF OBJECT_ID('AI_USER_ABILITY', 'U') IS NOT NULL DROP TABLE AI_USER_ABILITY;
IF OBJECT_ID('AI_USER_LOGIN_INFO', 'U') IS NOT NULL DROP TABLE AI_USER_LOGIN_INFO;
IF OBJECT_ID('AI_USER_VALIDATION_INFO', 'U') IS NOT NULL DROP TABLE AI_USER_VALIDATION_INFO;
IF OBJECT_ID('AI_USER_RESET_INFO', 'U') IS NOT NULL DROP TABLE AI_USER_RESET_INFO;
IF OBJECT_ID('AI_USER_INFO', 'U') IS NOT NULL DROP TABLE AI_USER_INFO;
IF OBJECT_ID('EVENT_LOGS', 'U') IS NOT NULL DROP TABLE EVENT_LOGS;
IF OBJECT_ID('AI_MAP_USER_GROUP_PERMISSION', 'U') IS NOT NULL DROP TABLE AI_MAP_USER_GROUP_PERMISSION;
IF OBJECT_ID('AI_USER', 'U') IS NOT NULL DROP TABLE AI_USER;
IF OBJECT_ID('AI_USER_ROLE', 'U') IS NOT NULL DROP TABLE AI_USER_ROLE;
IF OBJECT_ID('GENERAL_SETTINGS', 'U') IS NOT NULL DROP TABLE GENERAL_SETTINGS;
IF OBJECT_ID('PASSWORD_SETTINGS', 'U') IS NOT NULL DROP TABLE PASSWORD_SETTINGS;
IF OBJECT_ID('SMTP_SETTINGS', 'U') IS NOT NULL DROP TABLE SMTP_SETTINGS;
IF OBJECT_ID('DEVICE_SETTINGS', 'U') IS NOT NULL DROP TABLE DEVICE_SETTINGS;
IF OBJECT_ID('DEVICE_MAP_TAG', 'U') IS NOT NULL DROP TABLE DEVICE_MAP_TAG;
IF OBJECT_ID('DEVICE_HARDWARE_INFO', 'U') IS NOT NULL DROP TABLE DEVICE_HARDWARE_INFO;
IF OBJECT_ID('DEVICE_NETWORK_INFO', 'U') IS NOT NULL DROP TABLE DEVICE_NETWORK_INFO;
IF OBJECT_ID('TAG_INFO', 'U') IS NOT NULL DROP TABLE TAG_INFO;
IF OBJECT_ID('DEVICE_GROUP_INFO', 'U') IS NOT NULL DROP TABLE DEVICE_GROUP_INFO;
IF OBJECT_ID('DEVICE_MAP_KEEPALIVE_TIME', 'U') IS NOT NULL DROP TABLE DEVICE_MAP_KEEPALIVE_TIME;
IF OBJECT_ID('DEVICE_MAP_AUTHORIZATION', 'U') IS NOT NULL DROP TABLE DEVICE_MAP_AUTHORIZATION;
IF OBJECT_ID('DEVICE_RESPONSE_WAIT_INFO', 'U') IS NOT NULL DROP TABLE DEVICE_RESPONSE_WAIT_INFO;
IF OBJECT_ID('DEVICE_GET_ACTIONS', 'U') IS NOT NULL DROP TABLE DEVICE_GET_ACTIONS;
IF OBJECT_ID('DEVICE_SET_ACTIONS', 'U') IS NOT NULL DROP TABLE DEVICE_SET_ACTIONS;
IF OBJECT_ID('APP_FILE_INFO', 'U') IS NOT NULL DROP TABLE APP_FILE_INFO;
IF OBJECT_ID('CLIENT_APP_FILE_INFO', 'U') IS NOT NULL DROP TABLE CLIENT_APP_FILE_INFO;
IF OBJECT_ID('DEVICE_MAP_APP', 'U') IS NOT NULL DROP TABLE DEVICE_MAP_APP;
IF OBJECT_ID('DEVICE_USAGE_TIME_INFO', 'U') IS NOT NULL DROP TABLE DEVICE_USAGE_TIME_INFO;
IF OBJECT_ID('DEVICE_USAGE_CURRENT_INFO', 'U') IS NOT NULL DROP TABLE DEVICE_USAGE_CURRENT_INFO;
IF OBJECT_ID('DEVICE_INFO', 'U') IS NOT NULL DROP TABLE DEVICE_INFO;
IF OBJECT_ID('APP_INFO', 'U') IS NOT NULL DROP TABLE APP_INFO;
IF OBJECT_ID('DEVICE_ENROLLMENT_TREND_INFO', 'U') IS NOT NULL DROP TABLE DEVICE_ENROLLMENT_TREND_INFO;
IF OBJECT_ID('MESSAGE_ALERT_HISTORY_MAP_DEVICE', 'U') IS NOT NULL DROP TABLE MESSAGE_ALERT_HISTORY_MAP_DEVICE;
IF OBJECT_ID('MESSAGE_ALERT_HISTORY', 'U') IS NOT NULL DROP TABLE MESSAGE_ALERT_HISTORY;
IF OBJECT_ID('MESSAGE_ALERT_TEMPLATE', 'U') IS NOT NULL DROP TABLE MESSAGE_ALERT_TEMPLATE;
IF OBJECT_ID('UPLOADED_FIRMWARE_INFO', 'U') IS NOT NULL DROP TABLE UPLOADED_FIRMWARE_INFO;
IF OBJECT_ID('AI_SCHEDULE_TASK', 'U') IS NOT NULL DROP TABLE AI_SCHEDULE_TASK;
IF OBJECT_ID('AI_INFO_SECURITY', 'U') IS NOT NULL DROP TABLE AI_INFO_SECURITY;

-- TABLES

CREATE TABLE AI_USER (
    USER_ID                INT IDENTITY(1,1) PRIMARY KEY,
    LOGIN_ID               VARCHAR(200) NOT NULL UNIQUE,
    ROLE_ID                DECIMAL(10,0),
    PASSWORD               VARCHAR(200) NOT NULL,
    PASSWORD_CHANGE_DATE   DATETIME,
    JOINING_DATE           DATETIME,
    SECRET_KEY             VARCHAR(200),
    NEED_PASSWORD_RESET    BIT DEFAULT 1
);

CREATE TABLE AI_USER_INFO (
    USER_NAME       VARCHAR(200),
    EMAIL           VARCHAR(200),
    CONTACT_NUMBER  VARCHAR(60),
    USER_ID         INT UNIQUE,
    CONSTRAINT FK_AI_USER_INFO_USER_ID FOREIGN KEY (USER_ID) REFERENCES AI_USER (USER_ID) ON DELETE CASCADE
);

CREATE TABLE AI_USER_ROLE (
    ROLE_ID     DECIMAL(10,0) PRIMARY KEY,
    ROLE_NAME   VARCHAR(200),
    IS_DEFAULT  CHAR(1) DEFAULT 'N'
);

ALTER TABLE AI_USER ADD CONSTRAINT FK_AI_USER_ROLE_ID FOREIGN KEY (ROLE_ID) REFERENCES AI_USER_ROLE(ROLE_ID);

CREATE TABLE AI_MAP_USER_ABILITY_USER_ROLE (
    ABILITY_ID  DECIMAL(10,0) NOT NULL,
    ROLE_ID     DECIMAL(10,0) NOT NULL,
    CONSTRAINT PK_AI_MAP_USER_ABILITY_USER_ROLE PRIMARY KEY (ABILITY_ID, ROLE_ID),
    CONSTRAINT FK_AI_MAP_USER_ABILITY_USER_ROLE_ROLE_ID FOREIGN KEY (ROLE_ID) REFERENCES AI_USER_ROLE(ROLE_ID) ON DELETE CASCADE,
    CONSTRAINT FK_AI_MAP_USER_ABILITY_USER_ROLE_ABILITY_ID FOREIGN KEY (ABILITY_ID) REFERENCES AI_USER_ABILITY(ABILITY_ID) ON DELETE CASCADE
);

CREATE TABLE AI_USER_LOGIN_INFO (
    FAIL_COUNT        DECIMAL(10,0),
    IS_FIRST_LOGIN    BIT DEFAULT 1,
    LAST_FAIL_DATE    DATETIME,
    LAST_LOGIN_DATE   DATETIME,
    USER_ID           INT UNIQUE,
    CONSTRAINT FK_AI_USER_LOGIN_INFO_USER_ID FOREIGN KEY (USER_ID) REFERENCES AI_USER (USER_ID) ON DELETE CASCADE
);

CREATE TABLE AI_USER_VALIDATION_INFO (
    OTP                    DECIMAL(6,0),
    OTP_TOKEN              VARCHAR(200),
    OTP_EXPIRE_TIME        DATETIME,
    AUTH_TOKEN             VARCHAR(200),
    AUTH_TOKEN_EXPIRE_TIME DATETIME,
    USER_ID                INT UNIQUE,
    CONSTRAINT FK_AI_USER_VALIDATION_INFO_USER_ID FOREIGN KEY (USER_ID) REFERENCES AI_USER (USER_ID) ON DELETE CASCADE
);

CREATE TABLE AI_USER_RESET_INFO (
    OTP_FAIL_COUNT     DECIMAL(10,0),
    LAST_OTP_FAIL_DATE DATETIME,
    USER_ID            INT UNIQUE,
    CONSTRAINT FK_AI_USER_RESET_INFO_USER_ID FOREIGN KEY (USER_ID) REFERENCES AI_USER (USER_ID) ON DELETE CASCADE
);

CREATE TABLE AI_USER_ABILITY (
    ABILITY_ID     DECIMAL(10, 0) PRIMARY KEY,
    ABILITY_NAME   VARCHAR(200),
    ABILITY_GROUP  VARCHAR(200)
);

CREATE TABLE GENERAL_SETTINGS (
    DEVICE_AUTO_APPROVE              BIT DEFAULT 1,
    SIGN_IN_FAILURE_COUNT            DECIMAL(10,0) DEFAULT 4,
    SIGN_IN_FAILURE_COUNT_MIN_VALUE  DECIMAL(10,0) DEFAULT 1,
    SIGN_IN_FAILURE_COUNT_MAX_VALUE  DECIMAL(10,0) DEFAULT 10,
    SIGN_IN_BLOCK_DURATION           DECIMAL(10,0) DEFAULT 10,
    SIGN_IN_BLOCK_DURATION_MIN_VALUE DECIMAL(10,0) DEFAULT 1,
    SIGN_IN_BLOCK_DURATION_MAX_VALUE DECIMAL(10,0) DEFAULT 100,
    UNAUTHORIZED_ACCESS_COUNT_LIMIT  DECIMAL(18,0) DEFAULT 5,
    STORAGE_AND_RAM_USAGE_LIMIT      DECIMAL(18,0) DEFAULT 80,
    SCREEN_ON_LIMIT                  DECIMAL(18,0) DEFAULT 8
);

CREATE TABLE PASSWORD_SETTINGS (
    CHANGE_PERIOD            DECIMAL(10,0) DEFAULT 1,
    CHANGE_PERIOD_MIN_VALUE  DECIMAL(10,0) DEFAULT 1,
    CHANGE_PERIOD_MAX_VALUE  DECIMAL(10,0) DEFAULT 100,
    PREVENT_REUSE            BIT DEFAULT 0,
    CHANGE_AFTER_LOGIN       BIT DEFAULT 1,
    IS_DEFAULT_PASSWORD_USED BIT DEFAULT 0,
    DEFAULT_PASSWORD         VARCHAR(200),
    IS_MFA_ENABLED           BIT DEFAULT 0
);

CREATE TABLE SMTP_SETTINGS (
    IS_SMTP_ENABLED           BIT DEFAULT 0,
    SMTP_URL               VARCHAR(200),
    SMTP_USE_AUTH          BIT DEFAULT 0,
    SMTP_ID                VARCHAR(200),
    SMTP_PASSWORD          VARCHAR(200),
    SMTP_PORT              DECIMAL(10,0),
    SMTP_USE_SSL           BIT DEFAULT 0
);

CREATE TABLE EVENT_LOGS (
    EVENT_TYPE              VARCHAR(200),
    EVENT_DESCRIPTION       VARCHAR(200),
    EVENT_OCCURANCE_TIME    DATETIME,
    IP_ADDRESS              VARCHAR(200),
    LOGIN_ID                VARCHAR(200) NOT NULL,
    CONSTRAINT FK_EVENT_LOGS_LOGIN_ID FOREIGN KEY (LOGIN_ID) REFERENCES AI_USER (LOGIN_ID) ON DELETE CASCADE
);

CREATE TABLE DEVICE_INFO (
    DEVICE_ID                     VARCHAR(200) PRIMARY KEY,
    DEVICE_NAME                   VARCHAR(200),
    IS_ENROLLED                   BIT DEFAULT 0,
    DEVICE_GROUP_ID               DECIMAL(10,0),
    DEVICE_TYPE                   VARCHAR(200),
    IP_ADDRESS                    VARCHAR(200),
    DEVICE_MODEL_NAME             VARCHAR(200),
    DEVICE_SERIAL                 VARCHAR(200),
    AI_CLIENT_VERSION             VARCHAR(200),
    AI_CLIENT_VERSION_CODE        DECIMAL(18,0) DEFAULT 0,
    DEVICE_OS_VERSION             VARCHAR(200),
    DEVICE_FW_BUILD_VERSION_CODE  DECIMAL(18,0),
    DEVICE_FW_VERSION             VARCHAR(60),
    BOOTSTRAP_TIME                DATETIME,
    REGISTER_DATE                 DATETIME
);

CREATE TABLE DEVICE_SETTINGS (
    CONNECTION_STATUS           BIT DEFAULT 0,
    DEVICE_TIMEZONE             VARCHAR(60),
    DEVICE_WIFI_MAC_ADDRESS     VARCHAR(200),
    DEVICE_WIFI_CONNECTION_NAME VARCHAR(200),
    DEVICE_CURRENT_INPUT_SOURCE VARCHAR(60),
    DEVICE_SCREEN_PREVIEW       VARCHAR(60) DEFAULT 'STOP',
    UNAUTHORIZED_ACCESS         BIT DEFAULT 0,
    HIGH_STORAGE_AND_RAM_USAGE  BIT DEFAULT 0,
    DEVICE_LOCK_STATUS          BIT DEFAULT 0,
    SETTINGS_LOCK_STATUS        BIT DEFAULT 0,
    DEVICE_ID                   VARCHAR(200) NOT NULL UNIQUE,
    CONSTRAINT FK_DEVICE_SETTINGS_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE_INFO (DEVICE_ID) ON DELETE CASCADE
);

CREATE TABLE DEVICE_MAP_TAG (
    TAG_ID     DECIMAL(10,0) NOT NULL,
    DEVICE_ID  VARCHAR(200)  NOT NULL,
    CONSTRAINT PK_DEVICE_MAP_TAG PRIMARY KEY (TAG_ID, DEVICE_ID),
    CONSTRAINT FK_DEVICE_MAP_TAG_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE_INFO (DEVICE_ID) ON DELETE CASCADE
);

CREATE TABLE TAG_INFO (
    TAG_NAME   VARCHAR(200) PRIMARY KEY,
    TAG_ID     INT IDENTITY(1,1)
);

CREATE TABLE DEVICE_HARDWARE_INFO (
    CPU_TYPE                  VARCHAR(200),
    DISK_USAGE_SIZE           DECIMAL(15,0),
    DISK_AVAILABLE_SIZE       DECIMAL(15,0),
    MEMORY_USAGE_SIZE         DECIMAL(15,0),
    MEMORY_AVAILABLE_SIZE     DECIMAL(15,0),
    TOUCH_FRAME_TYPE          VARCHAR(200),
    DEVICE_ID                 VARCHAR(200) NOT NULL UNIQUE,
    CONSTRAINT FK_DEVICE_HARDWARE_INFO_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE_INFO (DEVICE_ID) ON DELETE CASCADE
);

CREATE TABLE DEVICE_NETWORK_INFO (
    INTERFACE_NAME             VARCHAR(200),
    INTERFACE_TYPE             VARCHAR(200),
    INTERFACE_MAC_ADDRESS      VARCHAR(200),
    INTERFACE_IP_ADDRESS_LIST  VARCHAR(300),
    DEVICE_ID                  VARCHAR(200) NOT NULL,
    CONSTRAINT PK_DEVICE_NETWORK_INFO PRIMARY KEY (INTERFACE_NAME, DEVICE_ID),
    CONSTRAINT FK_DEVICE_NETWORK_INFO_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE_INFO (DEVICE_ID) ON DELETE CASCADE
);

CREATE TABLE DEVICE_GROUP_INFO (
    GROUP_ID     		INT IDENTITY(1,1) PRIMARY KEY,
    PARENT_GROUP_ID   	DECIMAL(10,0),
    GROUP_NAME   		VARCHAR(200),
    IS_DEFAULT   		BIT DEFAULT 0,
    DEVICE_COUNT		INT DEFAULT 0
);

CREATE TABLE AI_MAP_USER_GROUP_PERMISSION (
    USER_ID      INT NOT NULL,
    GROUP_ID     INT NOT NULL,
    CONSTRAINT FK_AI_MAP_USER_GROUP_PERMISSION_USER_ID FOREIGN KEY (USER_ID) REFERENCES AI_USER (USER_ID) ON DELETE CASCADE,
    CONSTRAINT FK_AI_MAP_USER_GROUP_PERMISSION_GROUP_ID FOREIGN KEY (GROUP_ID) REFERENCES DEVICE_GROUP_INFO(GROUP_ID) ON DELETE CASCADE
);

CREATE TABLE DEVICE_MAP_AUTHORIZATION (
    AUTH_PASSWORD   VARCHAR(200) NOT NULL,
    DEVICE_ID       VARCHAR(200) NOT NULL UNIQUE,
    CONSTRAINT FK_DEVICE_MAP_AUTHORIZATION_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE_INFO (DEVICE_ID) ON DELETE CASCADE
);

CREATE TABLE DEVICE_MAP_KEEPALIVE_TIME (
    KEEPALIVE_TIME   DATETIME NOT NULL,
    DEVICE_ID        VARCHAR(200) NOT NULL UNIQUE,
    CONSTRAINT FK_DEVICE_MAP_KEEPALIVE_TIME_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE_INFO (DEVICE_ID) ON DELETE CASCADE
);

CREATE TABLE DEVICE_GET_ACTIONS (
    COMMAND    VARCHAR(200) NOT NULL,
    DEVICE_ID  VARCHAR(200) NOT NULL,
    CONSTRAINT PK_DEVICE_GET_ACTIONS PRIMARY KEY (COMMAND, DEVICE_ID),
    CONSTRAINT FK_DEVICE_GET_ACTIONS_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE_INFO (DEVICE_ID) ON DELETE CASCADE
);

CREATE TABLE DEVICE_SET_ACTIONS (
    COMMAND         VARCHAR(200) NOT NULL,
    REQUEST_VALUE   VARCHAR(1000) NOT NULL,
    DEVICE_ID       VARCHAR(200) NOT NULL,
    CONSTRAINT FK_DEVICE_SET_ACTIONS_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE_INFO (DEVICE_ID) ON DELETE CASCADE
);

CREATE TABLE DEVICE_RESPONSE_WAIT_INFO (
    MESSAGE_ID    VARCHAR(200) NOT NULL,
    DEVICE_ID     VARCHAR(200) NOT NULL,
    CONSTRAINT PK_DEVICE_RESPONSE_WAIT_INFO PRIMARY KEY (MESSAGE_ID, DEVICE_ID),
    CONSTRAINT FK_DEVICE_RESPONSE_WAIT_INFO_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE_INFO (DEVICE_ID) ON DELETE CASCADE
);

CREATE TABLE APP_FILE_INFO (
    APP_PACKAGE_NAME    VARCHAR(200) PRIMARY KEY,
    APP_SIZE            DECIMAL(7,2),
    APP_NAME            VARCHAR(200) NOT NULL,
    APP_VERSION_NAME    VARCHAR(60),
    APP_VERSION_CODE    DECIMAL(18,0),
    APP_ICON_PATH       VARCHAR(1000),
    APP_FILE_PATH       VARCHAR(1000)
);

CREATE TABLE DEVICE_MAP_APP (
    APP_PACKAGE_NAME   VARCHAR(200) NOT NULL,
    APP_STATE          VARCHAR(60) DEFAULT 'ENABLED',
    DEVICE_ID          VARCHAR(200) NOT NULL,
    APP_USAGE_TIME	   DECIMAL(18,0) DEFAULT 0,
    CONSTRAINT PK_DEVICE_MAP_APP PRIMARY KEY (APP_PACKAGE_NAME, DEVICE_ID),
    CONSTRAINT FK_DEVICE_MAP_APP_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE_INFO (DEVICE_ID) ON DELETE CASCADE
);

CREATE TABLE APP_INFO (
    APP_PACKAGE_NAME    VARCHAR(200) PRIMARY KEY,
    APP_NAME            VARCHAR(200) NOT NULL,
    APP_VERSION_NAME    VARCHAR(60),
    APP_TYPE            VARCHAR(60),
    APP_PLATFORM        VARCHAR(60),
    APP_STATE           VARCHAR(60),
    APP_VERSION_CODE    DECIMAL(18,0),
    APP_INSTALL_TIME    DECIMAL(18,0)
);

CREATE TABLE CLIENT_APP_FILE_INFO (
    APP_PACKAGE_NAME    VARCHAR(200),
    APP_SIZE            DECIMAL(7,2),
    APP_NAME            VARCHAR(200) NOT NULL,
    APP_VERSION_NAME    VARCHAR(60),
    APP_VERSION_CODE    DECIMAL(18,0),
    APP_ICON_PATH       VARCHAR(1000),
    APP_FILE_PATH       VARCHAR(1000),
    SUPPORTED_DEVICE_TYPES VARCHAR(1000) -- Store as comma-separated string
    -- No PK on array column; add surrogate PK if needed
);

-- No domain, so emulate array with VARCHAR(MAX)
CREATE TABLE DEVICE_USAGE_TIME_INFO (
    DEVICE_ID         VARCHAR(200) PRIMARY KEY,
    DAILY_USAGE_TIME  VARCHAR(MAX) DEFAULT '0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0',
    CONSTRAINT FK_DEVICE_USAGE_TIME_INFO_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE_INFO (DEVICE_ID) ON DELETE CASCADE
);

CREATE TABLE DEVICE_USAGE_CURRENT_INFO (
    CURRENT_DAY       DATETIME,
    CURRENT_INDEX     INT DEFAULT 0
    -- Add PK if needed
);

CREATE TABLE DEVICE_ENROLLMENT_TREND_INFO (
    ENROLLMENT_DATE   VARCHAR(8) PRIMARY KEY,
    ENROLLMENT_COUNT  DECIMAL(18,0) DEFAULT 0
);
