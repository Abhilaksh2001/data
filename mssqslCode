-- Roles
CREATE TABLE role (
    role_id INT IDENTITY(1,1) PRIMARY KEY,
    role_name NVARCHAR(50) NOT NULL UNIQUE,
    description NVARCHAR(MAX)
);

-- Users
CREATE TABLE [user] (
    user_id INT IDENTITY(1,1) PRIMARY KEY,
    username NVARCHAR(50) NOT NULL UNIQUE,
    email NVARCHAR(100) NOT NULL UNIQUE,
    password_hash NVARCHAR(255) NOT NULL,
    role_id INT NOT NULL FOREIGN KEY REFERENCES role(role_id),
    status NVARCHAR(20) NOT NULL DEFAULT 'active',
    created_at DATETIME DEFAULT GETDATE(),
    updated_at DATETIME DEFAULT GETDATE()
);

-- User Groups
CREATE TABLE user_group (
    user_group_id INT IDENTITY(1,1) PRIMARY KEY,
    group_name NVARCHAR(100) NOT NULL UNIQUE,
    description NVARCHAR(MAX)
);

CREATE TABLE user_group_membership (
    user_group_id INT NOT NULL FOREIGN KEY REFERENCES user_group(user_group_id) ON DELETE CASCADE,
    user_id INT NOT NULL FOREIGN KEY REFERENCES [user](user_id) ON DELETE CASCADE,
    joined_at DATETIME DEFAULT GETDATE(),
    PRIMARY KEY (user_group_id, user_id)
);

-- Devices
CREATE TABLE device (
    device_id INT IDENTITY(1,1) PRIMARY KEY,
    serial_number NVARCHAR(100) NOT NULL UNIQUE,
    model NVARCHAR(100),
    manufacturer NVARCHAR(100),
    os_version NVARCHAR(50),
    status NVARCHAR(20) NOT NULL DEFAULT 'active',
    assigned_user_id INT FOREIGN KEY REFERENCES [user](user_id),
    created_at DATETIME DEFAULT GETDATE(),
    updated_at DATETIME DEFAULT GETDATE()
);

-- Device Groups
CREATE TABLE device_group (
    device_group_id INT IDENTITY(1,1) PRIMARY KEY,
    group_name NVARCHAR(100) NOT NULL UNIQUE,
    description NVARCHAR(MAX)
);

CREATE TABLE device_group_membership (
    device_group_id INT NOT NULL FOREIGN KEY REFERENCES device_group(device_group_id) ON DELETE CASCADE,
    device_id INT NOT NULL FOREIGN KEY REFERENCES device(device_id) ON DELETE CASCADE,
    added_at DATETIME DEFAULT GETDATE(),
    PRIMARY KEY (device_group_id, device_id)
);

-- Device Commands
CREATE TABLE device_command (
    command_id INT IDENTITY(1,1) PRIMARY KEY,
    command_name NVARCHAR(100) NOT NULL,
    description NVARCHAR(MAX),
    command_payload NVARCHAR(MAX), -- Use NVARCHAR(MAX) for JSON or TEXT
    created_at DATETIME DEFAULT GETDATE()
);

CREATE TABLE device_command_history (
    history_id INT IDENTITY(1,1) PRIMARY KEY,
    device_id INT NOT NULL FOREIGN KEY REFERENCES device(device_id) ON DELETE CASCADE,
    command_id INT NOT NULL FOREIGN KEY REFERENCES device_command(command_id) ON DELETE CASCADE,
    issued_by_user_id INT NOT NULL FOREIGN KEY REFERENCES [user](user_id),
    status NVARCHAR(20) NOT NULL,
    issued_at DATETIME DEFAULT GETDATE(),
    completed_at DATETIME,
    response_payload NVARCHAR(MAX)
);

-- Tags for Devices
CREATE TABLE tag (
    tag_id INT IDENTITY(1,1) PRIMARY KEY,
    tag_name NVARCHAR(50) NOT NULL UNIQUE,
    description NVARCHAR(MAX)
);

CREATE TABLE device_tag (
    device_id INT NOT NULL FOREIGN KEY REFERENCES device(device_id) ON DELETE CASCADE,
    tag_id INT NOT NULL FOREIGN KEY REFERENCES tag(tag_id) ON DELETE CASCADE,
    added_at DATETIME DEFAULT GETDATE(),
    PRIMARY KEY (device_id, tag_id)
);

-- Apps
CREATE TABLE app (
    app_id INT IDENTITY(1,1) PRIMARY KEY,
    package_name NVARCHAR(255) NOT NULL UNIQUE,
    app_name NVARCHAR(255) NOT NULL,
    version NVARCHAR(50),
    publisher NVARCHAR(100),
    description NVARCHAR(MAX)
);

-- Apps installed on devices
CREATE TABLE device_app (
    device_id INT NOT NULL FOREIGN KEY REFERENCES device(device_id) ON DELETE CASCADE,
    app_id INT NOT NULL FOREIGN KEY REFERENCES app(app_id) ON DELETE CASCADE,
    installed_version NVARCHAR(50),
    install_status NVARCHAR(30) NOT NULL DEFAULT 'installed',
    installed_at DATETIME DEFAULT GETDATE(),
    uninstalled_at DATETIME,
    PRIMARY KEY (device_id, app_id)
);

-- App daily usage (no created_at as per your request)
CREATE TABLE app_daily_usage (
    usage_id INT IDENTITY(1,1) PRIMARY KEY,
    device_id INT NOT NULL FOREIGN KEY REFERENCES device(device_id) ON DELETE CASCADE,
    app_id INT NOT NULL FOREIGN KEY REFERENCES app(app_id) ON DELETE CASCADE,
    usage_date DATE NOT NULL,
    usage_duration INT NOT NULL,
    additional_info NVARCHAR(MAX),
    CONSTRAINT UQ_app_daily_usage UNIQUE (device_id, app_id, usage_date)
);
