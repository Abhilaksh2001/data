DROP TABLE IF EXISTS AI_MAP_USER_ABILITY_USER_ROLE;
DROP TABLE IF EXISTS AI_USER_ABILITY;
DROP TABLE IF EXISTS AI_USER_LOGIN_INFO;
DROP TABLE IF EXISTS AI_USER_VALIDATION_INFO;
DROP TABLE IF EXISTS AI_USER_RESET_INFO;
DROP TABLE IF EXISTS AI_USER_INFO;
DROP TABLE IF EXISTS EVENT_LOGS;
DROP TABLE IF EXISTS AI_MAP_USER_GROUP_PERMISSION;
DROP TABLE IF EXISTS AI_USER;
DROP TABLE IF EXISTS AI_USER_ROLE;
DROP TABLE IF EXISTS GENERAL_SETTINGS;
DROP TABLE IF EXISTS PASSWORD_SETTINGS;
DROP TABLE IF EXISTS SMTP_SETTINGS;
DROP TABLE IF EXISTS DEVICE_SETTINGS;
DROP TABLE IF EXISTS DEVICE_MAP_TAG;
DROP TABLE IF EXISTS DEVICE_HARDWARE_INFO;
DROP TABLE IF EXISTS DEVICE_NETWORK_INFO;
DROP TABLE IF EXISTS TAG_INFO;
DROP TABLE IF EXISTS DEVICE_GROUP_INFO;
DROP TABLE IF EXISTS DEVICE_MAP_KEEPALIVE_TIME;
DROP TABLE IF EXISTS DEVICE_MAP_AUTHORIZATION;
DROP TABLE IF EXISTS DEVICE_RESPONSE_WAIT_INFO;
DROP TABLE IF EXISTS DEVICE_GET_ACTIONS;
DROP TABLE IF EXISTS DEVICE_SET_ACTIONS;
DROP TABLE IF EXISTS APP_FILE_INFO;
DROP TABLE IF EXISTS CLIENT_APP_FILE_INFO;
DROP TABLE IF EXISTS DEVICE_MAP_APP;
DROP TABLE IF EXISTS DEVICE_USAGE_TIME_INFO;
DROP TABLE IF EXISTS DEVICE_USAGE_CURRENT_INFO;
DROP TABLE IF EXISTS DEVICE_INFO;
DROP DOMAIN IF EXISTS DOUBLE_ARRAY_29;
DROP TABLE IF EXISTS  APP_INFO;
DROP TABLE IF EXISTS DEVICE_ENROLLMENT_TREND_INFO;
DROP TABLE IF EXISTS MESSAGE_ALERT_HISTORY_MAP_DEVICE;
DROP TABLE IF EXISTS MESSAGE_ALERT_HISTORY;
DROP TABLE IF EXISTS MESSAGE_ALERT_TEMPLATE;
DROP TABLE IF EXISTS UPLOADED_FIRMWARE_INFO;
DROP TABLE IF EXISTS AI_SCHEDULE_TASK;
DROP TABLE IF EXISTS AI_INFO_SECURITY;

CREATE TABLE AI_USER (
    USER_ID                SERIAL PRIMARY KEY,
    LOGIN_ID               VARCHAR(200) NOT NULL UNIQUE,
    ROLE_ID                NUMERIC(10,0),
    PASSWORD               VARCHAR(200) NOT NULL,
    PASSWORD_CHANGE_DATE   TIMESTAMP,
    JOINING_DATE           TIMESTAMP,
	SECRET_KEY             VARCHAR(200),
	NEED_PASSWORD_RESET    BOOLEAN DEFAULT TRUE
);

CREATE TABLE AI_USER_INFO (
    USER_NAME       VARCHAR(200),
    EMAIL           VARCHAR(200),
    CONTACT_NUMBER  VARCHAR(60),
    USER_ID         INTEGER UNIQUE
);
ALTER TABLE AI_USER_INFO ADD CONSTRAINT AI_USER_INFO_FKEY_USER_ID FOREIGN KEY (USER_ID) REFERENCES AI_USER (USER_ID) ON DELETE CASCADE;


CREATE TABLE AI_USER_ROLE
(
    ROLE_ID     NUMERIC(10,0) PRIMARY KEY,
    ROLE_NAME   VARCHAR(200),
    IS_DEFAULT  CHAR(1) DEFAULT 'N'
);
ALTER TABLE AI_USER ADD CONSTRAINT AI_USER_ROLE_FKEY_ROLE_ID FOREIGN KEY (ROLE_ID) REFERENCES AI_USER_ROLE(ROLE_ID);


CREATE TABLE AI_MAP_USER_ABILITY_USER_ROLE
(
    ABILITY_ID  NUMERIC(10,0) NOT NULL,
    ROLE_ID     NUMERIC(10,0) NOT NULL
);

CREATE TABLE AI_USER_LOGIN_INFO
(
    FAIL_COUNT        NUMERIC(10,0),
    IS_FIRST_LOGIN    BOOLEAN DEFAULT true,
    LAST_FAIL_DATE    TIMESTAMP,
    LAST_LOGIN_DATE   TIMESTAMP,
    USER_ID           INTEGER UNIQUE

);
ALTER TABLE  AI_USER_LOGIN_INFO ADD CONSTRAINT AI_USER_LOGIN_INFO_FKEY_USER_ID FOREIGN KEY (USER_ID) REFERENCES AI_USER (USER_ID) ON DELETE CASCADE;

CREATE TABLE AI_USER_VALIDATION_INFO
(
    OTP                    NUMERIC(6,0),
    OTP_TOKEN              VARCHAR(200),
    OTP_EXPIRE_TIME        TIMESTAMP,
    AUTH_TOKEN             VARCHAR(200),
    AUTH_TOKEN_EXPIRE_TIME TIMESTAMP,
    USER_ID                INTEGER UNIQUE

);

CREATE TABLE AI_USER_RESET_INFO
(
    OTP_FAIL_COUNT     NUMERIC(10,0),
    LAST_OTP_FAIL_DATE TIMESTAMP,
    USER_ID            INTEGER UNIQUE
);

ALTER TABLE AI_USER_VALIDATION_INFO ADD CONSTRAINT AI_USER_VALIDATION_INFO_FKEY_USER_ID FOREIGN KEY (USER_ID) REFERENCES AI_USER (USER_ID) ON DELETE CASCADE;
ALTER TABLE AI_USER_RESET_INFO ADD CONSTRAINT AI_USER_RESET_INFO_FKEY_USER_ID FOREIGN KEY (USER_ID) REFERENCES AI_USER (USER_ID) ON DELETE CASCADE;

--FIXED DATA
CREATE TABLE AI_USER_ABILITY
(
    ABILITY_ID     NUMERIC(10, 0) PRIMARY KEY,
    ABILITY_NAME   VARCHAR(200),
    ABILITY_GROUP  VARCHAR(200)
);

ALTER TABLE AI_MAP_USER_ABILITY_USER_ROLE ADD CONSTRAINT AI_MAP_USER_ABILITY_ROLE_FKEY_ROLE_ID FOREIGN KEY (ROLE_ID) REFERENCES AI_USER_ROLE(ROLE_ID) ON DELETE CASCADE;
ALTER TABLE AI_MAP_USER_ABILITY_USER_ROLE ADD CONSTRAINT AI_MAP_USER_ABILITY_ROLE_FKEY_ABILITY_ID FOREIGN KEY (ABILITY_ID) REFERENCES AI_USER_ABILITY(ABILITY_ID) ON DELETE CASCADE;

--SERVER SETTINGS
CREATE TABLE GENERAL_SETTINGS
(
    DEVICE_AUTO_APPROVE              BOOLEAN DEFAULT TRUE,
    SIGN_IN_FAILURE_COUNT            NUMERIC(10,0) DEFAULT 4,
    SIGN_IN_FAILURE_COUNT_MIN_VALUE  NUMERIC(10,0) DEFAULT 1,
    SIGN_IN_FAILURE_COUNT_MAX_VALUE  NUMERIC(10,0) DEFAULT 10,
    SIGN_IN_BLOCK_DURATION           NUMERIC(10,0) DEFAULT 10,
    SIGN_IN_BLOCK_DURATION_MIN_VALUE NUMERIC(10,0) DEFAULT 1,
    SIGN_IN_BLOCK_DURATION_MAX_VALUE NUMERIC(10,0) DEFAULT 100,
    UNAUTHORIZED_ACCESS_COUNT_LIMIT  NUMERIC DEFAULT 5,
    STORAGE_AND_RAM_USAGE_LIMIT      NUMERIC DEFAULT 80,
    SCREEN_ON_LIMIT                  NUMERIC DEFAULT 8
);

CREATE TABLE PASSWORD_SETTINGS
(
    CHANGE_PERIOD            NUMERIC(10,0) DEFAULT 1,
    CHANGE_PERIOD_MIN_VALUE  NUMERIC(10,0) DEFAULT 1,
    CHANGE_PERIOD_MAX_VALUE  NUMERIC(10,0) DEFAULT 100,
    PREVENT_REUSE            BOOLEAN DEFAULT FALSE,
    CHANGE_AFTER_LOGIN       BOOLEAN DEFAULT TRUE,
	IS_DEFAULT_PASSWORD_USED BOOLEAN DEFAULT FALSE,
    DEFAULT_PASSWORD         VARCHAR(200),
	IS_MFA_ENABLED           BOOLEAN DEFAULT FALSE
);

CREATE TABLE SMTP_SETTINGS
(
    IS_SMTP_ENABLED           BOOLEAN DEFAULT FALSE,
    SMTP_URL               VARCHAR(200),
    SMTP_USE_AUTH          BOOLEAN DEFAULT FALSE,
    SMTP_ID                VARCHAR(200),
    SMTP_PASSWORD          VARCHAR(200),
    SMTP_PORT              NUMERIC(10,0),
    SMTP_USE_SSL           BOOLEAN DEFAULT FALSE
);

CREATE TABLE EVENT_LOGS
(
    EVENT_TYPE              VARCHAR(200),
    EVENT_DESCRIPTION       VARCHAR(200),
    EVENT_OCCURANCE_TIME    TIMESTAMP,
    IP_ADDRESS              VARCHAR(200),
    LOGIN_ID                VARCHAR(200) NOT NULL
);

ALTER TABLE EVENT_LOGS ADD CONSTRAINT EVENT_LOGS_FKEY_LOGIN_ID FOREIGN KEY (LOGIN_ID) REFERENCES AI_USER (LOGIN_ID) ON DELETE CASCADE;


CREATE TABLE DEVICE_INFO
(
	DEVICE_ID                     VARCHAR(200) PRIMARY KEY,
    DEVICE_NAME                   VARCHAR(200),
    IS_ENROLLED                   BOOLEAN DEFAULT FALSE,
    DEVICE_GROUP_ID               NUMERIC(10,0),
    DEVICE_TYPE                   VARCHAR(200),
    IP_ADDRESS                    VARCHAR(200),
    DEVICE_MODEL_NAME             VARCHAR(200),
    DEVICE_SERIAL                 VARCHAR(200),
    AI_CLIENT_VERSION            VARCHAR(200),
	AI_CLIENT_VERSION_CODE       NUMERIC DEFAULT 0,
    DEVICE_OS_VERSION             VARCHAR(200),
    DEVICE_FW_BUILD_VERSION_CODE  NUMERIC,
    DEVICE_FW_VERSION             VARCHAR(60),
    BOOTSTRAP_TIME                TIMESTAMP,
    REGISTER_DATE                 TIMESTAMP
);


CREATE TABLE DEVICE_SETTINGS
(
	CONNECTION_STATUS           BOOLEAN DEFAULT FALSE,
	DEVICE_TIMEZONE             VARCHAR(60),
	DEVICE_WIFI_MAC_ADDRESS     VARCHAR(200),
	DEVICE_WIFI_CONNECTION_NAME VARCHAR(200),
	DEVICE_CURRENT_INPUT_SOURCE VARCHAR(60),
	DEVICE_SCREEN_PREVIEW       VARCHAR(60) DEFAULT 'STOP',
	UNAUTHORIZED_ACCESS         BOOLEAN DEFAULT FALSE,
	HIGH_STORAGE_AND_RAM_USAGE  BOOLEAN DEFAULT FALSE,
	DEVICE_LOCK_STATUS          BOOLEAN DEFAULT FALSE,
	SETTINGS_LOCK_STATUS        BOOLEAN DEFAULT FALSE,
	DEVICE_ID                   VARCHAR(200) NOT NULL UNIQUE
);

ALTER TABLE DEVICE_SETTINGS ADD CONSTRAINT DEVICE_SETTINGS_FKEY_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE_INFO (DEVICE_ID) ON DELETE CASCADE;

CREATE TABLE DEVICE_MAP_TAG
(
	TAG_ID     NUMERIC(10,0) NOT NULL,
	DEVICE_ID  VARCHAR(200)  NOT NULL
);

ALTER TABLE DEVICE_MAP_TAG ADD CONSTRAINT DEVICE_MAP_TAG_PKEY PRIMARY KEY (TAG_ID, DEVICE_ID);

CREATE TABLE TAG_INFO
(
	TAG_NAME   VARCHAR(200),
	TAG_ID     SERIAL
);

ALTER TABLE TAG_INFO ADD CONSTRAINT TAG_INFO_PKEY PRIMARY KEY (TAG_NAME);

ALTER TABLE DEVICE_MAP_TAG ADD CONSTRAINT DEVICE_MAP_TAG_FKEY_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE_INFO (DEVICE_ID) ON DELETE CASCADE;

CREATE TABLE DEVICE_HARDWARE_INFO
(
	CPU_TYPE                  VARCHAR(200),
	DISK_USAGE_SIZE           NUMERIC(15,0),
	DISK_AVAILABLE_SIZE       NUMERIC(15,0),
	MEMORY_USAGE_SIZE         NUMERIC(15,0),
	MEMORY_AVAILABLE_SIZE     NUMERIC(15,0),
	TOUCH_FRAME_TYPE          VARCHAR(200),
	DEVICE_ID                 VARCHAR(200) NOT NULL UNIQUE
);

ALTER TABLE DEVICE_HARDWARE_INFO ADD CONSTRAINT DEVICE_HARDWARE_INFO_FKEY_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE_INFO (DEVICE_ID) ON DELETE CASCADE;

CREATE TABLE DEVICE_NETWORK_INFO
(
	INTERFACE_NAME             VARCHAR(200),
	INTERFACE_TYPE             VARCHAR(200),
	INTERFACE_MAC_ADDRESS      VARCHAR(200),
	INTERFACE_IP_ADDRESS_LIST  VARCHAR(300),
	DEVICE_ID                  VARCHAR(200) NOT NULL
);

ALTER TABLE DEVICE_NETWORK_INFO ADD CONSTRAINT DEVICE_NETWORK_INFO_PKEY PRIMARY KEY (INTERFACE_NAME, DEVICE_ID);
ALTER TABLE DEVICE_NETWORK_INFO ADD CONSTRAINT DEVICE_NETWORK_INFO_FKEY_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE_INFO (DEVICE_ID) ON DELETE CASCADE;


CREATE TABLE DEVICE_GROUP_INFO
(
	GROUP_ID     		SERIAL PRIMARY KEY,
	PARENT_GROUP_ID   	NUMERIC(10,0),
	GROUP_NAME   		VARCHAR(200),
	IS_DEFAULT   		BOOLEAN DEFAULT FALSE,
	DEVICE_COUNT		INTEGER DEFAULT 0
);

CREATE TABLE AI_MAP_USER_GROUP_PERMISSION
(
    USER_ID      INTEGER NOT NULL,
    GROUP_ID     INTEGER NOT NULL
);

ALTER TABLE AI_MAP_USER_GROUP_PERMISSION ADD CONSTRAINT AI_MAP_USER_GROUP_PERMISSION_FKEY_USER_ID FOREIGN KEY (USER_ID) REFERENCES AI_USER (USER_ID) ON DELETE CASCADE;
ALTER TABLE AI_MAP_USER_GROUP_PERMISSION ADD CONSTRAINT AI_MAP_USER_GROUP_PERMISSION_FKEY_GROUP_ID FOREIGN KEY (GROUP_ID) REFERENCES DEVICE_GROUP_INFO(GROUP_ID) ON DELETE CASCADE;

CREATE TABLE DEVICE_MAP_AUTHORIZATION
(
	AUTH_PASSWORD   VARCHAR(200) NOT NULL,
	DEVICE_ID       VARCHAR(200) NOT NULL UNIQUE
);

ALTER TABLE DEVICE_MAP_AUTHORIZATION ADD CONSTRAINT DEVICE_MAP_AUTHORIZATION_FKEY_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE_INFO (DEVICE_ID) ON DELETE CASCADE;

CREATE TABLE DEVICE_MAP_KEEPALIVE_TIME
(
	KEEPALIVE_TIME   TIMESTAMP NOT NULL,
	DEVICE_ID        VARCHAR(200) NOT NULL UNIQUE
);

ALTER TABLE DEVICE_MAP_KEEPALIVE_TIME ADD CONSTRAINT DEVICE_MAP_KEEPALIVE_TIME_FKEY_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE_INFO (DEVICE_ID) ON DELETE CASCADE;


CREATE TABLE DEVICE_GET_ACTIONS
(
	COMMAND    VARCHAR NOT NULL,
	DEVICE_ID  VARCHAR(200) NOT NULL
);

ALTER TABLE DEVICE_GET_ACTIONS ADD CONSTRAINT DEVICE_GET_ACTIONS_PKEY PRIMARY KEY (COMMAND, DEVICE_ID);
ALTER TABLE DEVICE_GET_ACTIONS ADD CONSTRAINT DEVICE_GET_ACTIONS_FKEY_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE_INFO (DEVICE_ID) ON DELETE CASCADE;



CREATE TABLE DEVICE_SET_ACTIONS
(
	COMMAND         VARCHAR(200) NOT NULL,
	REQUEST_VALUE   VARCHAR(1000) NOT NULL,
	DEVICE_ID       VARCHAR(200) NOT NULL

);

ALTER TABLE DEVICE_SET_ACTIONS ADD CONSTRAINT DEVICE_SET_ACTIONS_FKEY_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE_INFO (DEVICE_ID) ON DELETE CASCADE;

CREATE TABLE DEVICE_RESPONSE_WAIT_INFO
(
	MESSAGE_ID    VARCHAR(200) NOT NULL,
	DEVICE_ID     VARCHAR(200) NOT NULL
);

ALTER TABLE DEVICE_RESPONSE_WAIT_INFO ADD CONSTRAINT DEVICE_RESPONSE_WAIT_INFO_PKEY PRIMARY KEY (MESSAGE_ID, DEVICE_ID);
ALTER TABLE DEVICE_RESPONSE_WAIT_INFO ADD CONSTRAINT DEVICE_RESPONSE_WAIT_INFO_FKEY_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE_INFO (DEVICE_ID) ON DELETE CASCADE;

CREATE TABLE APP_FILE_INFO
(
	APP_PACKAGE_NAME    VARCHAR(200) PRIMARY KEY,
	APP_SIZE            DECIMAL(7,2),
	APP_NAME            VARCHAR(200) NOT NULL,
	APP_VERSION_NAME    VARCHAR(60),
	APP_VERSION_CODE    NUMERIC,
	APP_ICON_PATH       VARCHAR(1000),
	APP_FILE_PATH       VARCHAR(1000)
);

CREATE TABLE DEVICE_MAP_APP
(
	APP_PACKAGE_NAME   VARCHAR(200) NOT NULL,
	APP_STATE          VARCHAR(60) DEFAULT 'ENABLED',
	DEVICE_ID          VARCHAR(200) NOT NULL,
	APP_USAGE_TIME	   NUMERIC DEFAULT 0
);

ALTER TABLE DEVICE_MAP_APP ADD CONSTRAINT DEVICE_MAP_APP_PKEY PRIMARY KEY (APP_PACKAGE_NAME, DEVICE_ID);

ALTER TABLE DEVICE_MAP_APP ADD CONSTRAINT DEVICE_MAP_APP_FKEY_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE_INFO (DEVICE_ID) ON DELETE CASCADE;

CREATE TABLE APP_INFO
(
	APP_PACKAGE_NAME    VARCHAR(200) PRIMARY KEY,
	APP_NAME            VARCHAR(200) NOT NULL,
	APP_VERSION_NAME    VARCHAR(60),
	APP_TYPE            VARCHAR(60),
	APP_PLATFORM        VARCHAR(60),
	APP_STATE           VARCHAR(60),
	APP_VERSION_CODE    NUMERIC,
	APP_INSTALL_TIME    NUMERIC
);

CREATE TABLE CLIENT_APP_FILE_INFO
(
	APP_PACKAGE_NAME    VARCHAR(200),
	APP_SIZE            DECIMAL(7,2),
	APP_NAME            VARCHAR(200) NOT NULL,
	APP_VERSION_NAME    VARCHAR(60),
	APP_VERSION_CODE    NUMERIC,
	APP_ICON_PATH       VARCHAR(1000),
	APP_FILE_PATH       VARCHAR(1000),
	SUPPORTED_DEVICE_TYPES VARCHAR(10)[]
);

ALTER TABLE CLIENT_APP_FILE_INFO ADD CONSTRAINT CLIENT_APP_FILE_INFO_PKEY PRIMARY KEY(APP_PACKAGE_NAME , SUPPORTED_DEVICE_TYPES);


CREATE DOMAIN DOUBLE_ARRAY_29 AS DOUBLE PRECISION[];

CREATE TABLE DEVICE_USAGE_TIME_INFO
(
	DAILY_USAGE_TIME  DOUBLE_ARRAY_29 DEFAULT '{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}',
	DEVICE_ID         VARCHAR(200)
);

ALTER TABLE DEVICE_USAGE_TIME_INFO ADD CONSTRAINT DEVICE_USAGE_TIME_INFO_PKEY PRIMARY KEY(DEVICE_ID);
ALTER TABLE DEVICE_USAGE_TIME_INFO ADD CONSTRAINT DEVICE_USAGE_TIME_INFO_FKEY_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE_INFO (DEVICE_ID) ON DELETE CASCADE;

CREATE TABLE DEVICE_USAGE_CURRENT_INFO
(
	CURRENT_DAY       TIMESTAMP,
	CURRENT_INDEX     INTEGER DEFAULT 0
);

CREATE TABLE DEVICE_ENROLLMENT_TREND_INFO
(
	ENROLLMENT_DATE   VARCHAR(8) PRIMARY KEY,
	ENROLLMENT_COUNT  NUMERIC DEFAULT 0
);

CREATE TABLE MESSAGE_ALERT_TEMPLATE
(
	TEMPLATE_ID             SERIAL PRIMARY KEY,
	TEMPLATE_TYPE			VARCHAR(50) NOT NULL,
	TEMPLATE_NAME           VARCHAR(100) NOT NULL,
	TEMPLATE_MESSAGE        VARCHAR(500),
	TEMPLATE_POSITION       VARCHAR(60),
	BACKGROUND_COLOR        VARCHAR(10),
	TEXT_COLOR              VARCHAR(10),
	TEXT_SIZE               NUMERIC,
	TEXT_STYLE              VARCHAR(8),
	ALERT_IMG_NAME          VARCHAR(100),
	ALERT_IMG_STORED_NAME   VARCHAR(100)
);

ALTER TABLE MESSAGE_ALERT_TEMPLATE ADD CONSTRAINT MESSAGE_ALERT_TEMPLATE_UKEY_COMBINATION UNIQUE (TEMPLATE_TYPE, TEMPLATE_NAME);

CREATE TABLE MESSAGE_ALERT_HISTORY
(
	ID                      SERIAL PRIMARY KEY,
	TEMPLATE_TYPE			VARCHAR(50),
	TEMPLATE_NAME           VARCHAR(100),
	TEMPLATE_MESSAGE        VARCHAR(500),
	TEMPLATE_POSITION       VARCHAR(60),
	BACKGROUND_COLOR        VARCHAR(10),
	TEXT_COLOR              VARCHAR(10),
	TEXT_SIZE               NUMERIC,
	TEXT_STYLE              VARCHAR(8),
	ALERT_IMG_NAME          VARCHAR(100),
	ALERT_IMG_STORED_NAME   VARCHAR(100),
	START_TIME              NUMERIC,
	END_TIME                NUMERIC,
	IS_RECALLED             BOOLEAN DEFAULT FALSE
);

CREATE TABLE MESSAGE_ALERT_HISTORY_MAP_DEVICE
(
	MESSAGE_ALERT_HISTORY_ID   INTEGER,
	DEVICE_ID                  VARCHAR(60),
	DEVICE_NAME                VARCHAR(200),

	IP_ADDRESS                 VARCHAR(100),
	GROUP_NAME                 VARCHAR(200)
);

ALTER TABLE MESSAGE_ALERT_HISTORY_MAP_DEVICE ADD CONSTRAINT MESSAGE_ALERT_HISTORY_MAP_DEVICE_FKEY_HISTORY_ID FOREIGN KEY (MESSAGE_ALERT_HISTORY_ID) REFERENCES MESSAGE_ALERT_HISTORY (ID) ON DELETE CASCADE;

CREATE TABLE UPLOADED_FIRMWARE_INFO
(
	FW_BUILD_VERSION_CODE  NUMERIC PRIMARY KEY,
	FW_NAME                VARCHAR(200) UNIQUE,
	FW_SIZE                NUMERIC,
	FW_FILE_NAME           VARCHAR(200),
	FW_MODEL           	   VARCHAR(50)
);


CREATE TABLE AI_SCHEDULE_TASK
(
	EVENT_ID                    VARCHAR(200),
	DEVICE_ID                   VARCHAR(200),
  	EVENT_TYPE                  VARCHAR(200),
  	EVENT_DATE                  NUMERIC
);

ALTER TABLE AI_SCHEDULE_TASK ADD CONSTRAINT AI_SCHEDULE_TASK_FKEY_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE_INFO (DEVICE_ID) ON DELETE CASCADE;
ALTER TABLE AI_SCHEDULE_TASK ADD CONSTRAINT AI_SCHEDULE_TASK_PKEY PRIMARY KEY (EVENT_ID , DEVICE_ID);


CREATE TABLE AI_INFO_SECURITY
(
	SECRET_KEY_TYPE VARCHAR(50) NOT NULL,
	SECRET_KEY VARCHAR(512) NOT NULL
);
